name: release

on:
  push:
    branches: [main]
    paths: ["CHANGELOG.md"]

permissions: write-all

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ABC1234567890
      AWS_SECRET_ACCESS_KEY: ABC1234567890
      AWS_DEFAULT_REGION: ap-northeast-1
      DYNAMODB_ENDPOINT: http://localhost:8000
    services:
      dynamodb:
        image: amazon/dynamodb-local:latest
        ports:
          - 8000:8000

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
          cache: true
          cache-dependency-path: go.sum

      - name: Setup mockgen
        run: |
          go install go.uber.org/mock/mockgen@latest

      - name: Go Generate
        run: |
          go mod tidy
          go generate ./...
          git diff --exit-code

      - name: Unit Test
        run: |
          TARGET=$(go list ./... | grep -v "mock")
          go test $TARGET -v -coverpkg=$TARGET -coverprofile=coverage.out

      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          fail_ci_if_error: false
          verbose: true

      - name: Create Table
        working-directory: ./.github
        run: |
          aws dynamodb create-table --cli-input-json file://table-def.json --endpoint-url ${{ env.DYNAMODB_ENDPOINT }}

      - name: Integration Test
        working-directory: ./tests
        run: |
          go mod tidy
          go test -v -coverpkg=${{ format('github.com/{0}', github.repository) }} -coverprofile=coverage.out

      - name: Upload integration test coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tests/coverage.out
          fail_ci_if_error: false
          verbose: true

      - name: Extract Version
        id: versioning
        run: |
          VERSION="v$(sed -n 's/##\s\([0-9.]*\)\s.*/\1/p' CHANGELOG.md | head -1)"
          echo ::set-output name=version::$VERSION

      - name: Extract changes from prev version
        run: |
          git fetch --prune --unshallow
          PRETAG=$(git describe --tags --abbrev=0)
          git diff $PRETAG..${{ github.sha }} -- CHANGELOG.md | grep -E '^\+' | grep -v '+++' | sed -e 's/^\+//g' | sed -e 's/##\s[0-9.]*\s.*//g' | sed -e '/^$/d'> diff-changelog.txt

      - name: Push Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.2
        with:
          custom_tag: ${{ steps.versioning.outputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          generate_release_notes: true
          body_path: diff-changelog.txt
